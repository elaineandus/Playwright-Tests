import { test, expect } from '@playwright/test';

test.beforeEach(async ({ page }) => {
  await page.goto('https://resibo-stag2.zennerslab.com/');
  expect(page).toHaveTitle('Resibo.ph - Home');

  await page.locator('#navbarSupportedContent').getByRole('link', { name: 'Login' }).click();

  await page.getByPlaceholder('Email').fill('dackalacbayo@gmail.com');
  await page.getByPlaceholder('Password').fill('password');
  await page.getByRole('button', { name: 'Sign in' }).click();
  
  await page.goto('https://resibo-stag2.zennerslab.com/invoices/create/');
});

test('item vat uniqlo', async ({ page }) => {
  await page.locator('#addRow').click();
  await page.locator('#formset_table > tbody > tr:nth-child(1) > td.sorting_1 > span > span.selection > span').click();
  // Name
  await page.getByRole('searchbox').nth(1).fill('uniq');
  await page.getByText('Uniqlo Basic T-Shirt').click();
  // Quantity
  await page.locator('#id_items-1-quantity').fill('1');
  // Price
  try {
  const priceCell = await page.locator('#id_items-1-unit_price');
  await expect(priceCell).toHaveValue('500');
  } catch (error) {
    await test.fail();
  }
  // Discount
  await page.locator('#select2-id_items-1-discount_type-container').click();
  await page.getByRole('option', { name: 'Senior Citizen (Single)' }).click();

  // Amount
  try {
  const amountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(7)');
  await expect(amountCell).toHaveText('20%');
  } catch (error) {
    await test.fail();
  }

  // (-)Discount (Discount Total)
  try {
  const discountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(8)');
  await expect(discountCell).toHaveText('89.29');
  } catch (error) {
    await test.fail();
  }

  // Item VAT Type (VAT Type)
  try {
  const typeCell = await page.locator('#id-1-vat_type');
  await expect(typeCell).toHaveValue('VAT');
  } catch (error) {
    await test.fail();
  }
 
  // Subtotal
  try {
  const subtotalCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(9)');
  await expect(subtotalCell).toHaveText('500.00');
  } catch (error) {
    await test.fail();
  }
  
  // (Total) Amount Payable
  try {
  const totalCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(10)');
  await expect(totalCell).toHaveText('357.14');
  } catch (error) {
    await test.fail();
  }
});

test('item vat h&m', async ({ page }) => {
  await page.locator('#addRow').click();
  await page.locator('#formset_table > tbody > tr:nth-child(1) > td.sorting_1 > span > span.selection > span').click();
  // Name
  await page.getByRole('searchbox').nth(1).fill('h&m');
  await page.getByText('H&M Basic T-Shirt').click();
  // Quantity
  await page.locator('#id_items-1-quantity').fill('1');
  // Price
  try {
  const priceCell = await page.locator('#id_items-1-unit_price');
  await expect(priceCell).toHaveValue('500.55');
  } catch (error) {
    await test.fail();
  }
  // Discount
  await page.locator('#select2-id_items-1-discount_type-container').click();
  await page.getByRole('option', { name: 'Senior Citizen (Single)' }).click();

  // Amount
  try {
  const amountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(7)');
  await expect(amountCell).toHaveText('20%');
  } catch (error) {
    await test.fail();
  }

  // (-)Discount (Discount Total)
  try {
  const discountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(8)');
  await expect(discountCell).toHaveText('89.38');
  } catch (error) {
    await test.fail();
  }

  // Item VAT Type (VAT Type)
  try {
  const typeCell = await page.locator('#id-1-vat_type');
  await expect(typeCell).toHaveValue('VAT');
  } catch (error) {
    await test.fail();
  }
 
  // Subtotal
  try {
  const subtotalCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(9)');
  await expect(subtotalCell).toHaveText('500.55');
  } catch (error) {
    await test.fail();
  }
  
  // (Total) Amount Payable
  try {
  const totalCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(10)');
  await expect(totalCell).toHaveText('357.54');
  } catch (error) {
    await test.fail();
  }
});

test('item vat banana', async ({ page }) => {
});

test('item vat nike air', async ({ page }) => {
  await page.locator('#addRow').click();
  await page.locator('#formset_table > tbody > tr:nth-child(1) > td.sorting_1 > span > span.selection > span').click();
  // Name
  await page.getByRole('searchbox').nth(1).fill('nike');
  await page.getByText('Nike Air Jordan 1 Retro High').click();
  // Quantity
  await page.locator('#id_items-1-quantity').fill('2');
  await page.locator('#select2-id_items-1-discount_type-container').press('Tab');
  // Price
  try {
  const priceCell = await page.locator('#id_items-1-unit_price');
  await expect(priceCell).toHaveValue('8000');
  } catch (error) {
    await test.fail();
  }
  // Discount
  await page.locator('#select2-id_items-1-discount_type-container').click();
  await page.locator('#select2-id_items-1-discount_type-container').press('ArrowDown');
  await page.locator('#select2-id_items-1-discount_type-container').press('ArrowDown');
  await page.locator('#select2-id_items-1-discount_type-container').press('ArrowDown');
  await page.locator('#select2-id_items-1-discount_type-container').press('ArrowDown');
  await page.locator('#select2-id_items-1-discount_type-container').press('ArrowDown');
  await page.locator('#select2-id_items-1-discount_type-container').press('ArrowDown');
  await page.locator('#select2-id_items-1-discount_type-container').press('ArrowDown');
  await page.locator('#select2-id_items-1-discount_type-container').press('ArrowDown');
  await page.locator('#select2-id_items-1-discount_type-container').press('Enter');

  // Amount
  try {
  const amountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(7)');
  await expect(amountCell).toHaveText('20%');
  } catch (error) {
    await test.fail();
  }

  // (-)Discount (Discount Total)
  try {
  const discountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(8)');
  await expect(discountCell).toHaveText('2,857.14');
  } catch (error) {
    await test.fail();
  }

  // Item VAT Type (VAT Type)
  try {
  const typeCell = await page.locator('#id-1-vat_type');
  await expect(typeCell).toHaveValue('VAT');
  } catch (error) {
    await test.fail();
  }
 
  // Subtotal
  try {
  const subtotalCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(9)');
  await expect(subtotalCell).toHaveText('16,000.00');
  } catch (error) {
    await test.fail();
  }
  
  // (Total) Amount Payable
  try {
  const totalCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(10)');
  await expect(totalCell).toHaveText('11,428.57');
  } catch (error) {
    await test.fail();
  }
  
});

test('item vat ikea', async ({ page }) => {
  await page.locator('#addRow').click();
  await page.locator('#formset_table > tbody > tr:nth-child(1) > td.sorting_1 > span > span.selection > span').click();
  // Name
  await page.getByRole('searchbox').nth(1).fill('ikea');
  await page.getByText('IKEA LACK Side Table').click();
  // Quantity
  await page.locator('#id_items-1-quantity').fill('3');
  await page.locator('#select2-id_items-1-discount_type-container').press('Tab');
  // Price
  try {
  const priceCell = await page.locator('#id_items-1-unit_price');
  await expect(priceCell).toHaveValue('1000');
  } catch (error) {
    await test.fail();
  }
  // Discount
  await page.locator('#select2-id_items-1-discount_type-container').click();
  await page.locator('#select2-id_items-1-discount_type-container').press('ArrowDown');
  await page.locator('#select2-id_items-1-discount_type-container').press('ArrowDown');
  await page.locator('#select2-id_items-1-discount_type-container').press('ArrowDown');
  await page.locator('#select2-id_items-1-discount_type-container').press('Enter');

  // Amount
  try {
  const amountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(7)');
  await expect(amountCell).toHaveText('20%');
  } catch (error) {
    await test.fail();
  }

  // (-)Discount (Discount Total)
  try {
  const discountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(8)');
  await expect(discountCell).toHaveText('178.57');
  } catch (error) {
    await test.fail();
  }

  // Item VAT Type (VAT Type)
  try {
  const typeCell = await page.locator('#id-1-vat_type');
  await expect(typeCell).toHaveValue('VAT');
  } catch (error) {
    await test.fail();
  }
 
  // Subtotal
  try {
  const subtotalCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(9)');
  await expect(subtotalCell).toHaveText('3,000.00');
  } catch (error) {
    await test.fail();
  }
  
  // (Total) Amount Payable
  try {
  const totalCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(10)');
  await expect(totalCell).toHaveText('2,714.29');
  } catch (error) {
    await test.fail();
  }
  
});

test('item vat apple', async ({ page }) => {
  await page.locator('#addRow').click();
  await page.locator('#formset_table > tbody > tr:nth-child(1) > td.sorting_1 > span > span.selection > span').click();
  // Name
  await page.getByRole('searchbox').nth(1).fill('apple');
  await page.getByText('Apple').click();
  // Quantity
  await page.locator('#id_items-1-quantity').fill('1');
  // Price
  try {
  const priceCell = await page.locator('#id_items-1-unit_price');
  await expect(priceCell).toHaveValue('10');
  } catch (error) {
    await test.fail();
  }
  // Discount
  await page.locator('#select2-id_items-1-discount_type-container').click();
  await page.getByRole('option', { name: 'Senior Citizen (Single)' }).click();

  // Amount
  try {
  const amountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(7)');
  await expect(amountCell).toHaveText('20%');
  } catch (error) {
    await test.fail();
  }

  // (-)Discount (Discount Total)
  try {
  const discountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(8)');
  await expect(discountCell).toHaveText('2.00');
  } catch (error) {
    await test.fail();
  }

  // Item VAT Type (VAT Type)
  try {
  const typeCell = await page.locator('#id-1-vat_type');
  await expect(typeCell).toHaveValue('VATEX');
  } catch (error) {
    await test.fail();
  }
 
  // Subtotal
  try {
  const subtotalCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(9)');
  await expect(subtotalCell).toHaveText('10.00');
  } catch (error) {
    await test.fail();
  }
  
  // (Total) Amount Payable
  try {
  const totalCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(10)');
  await expect(totalCell).toHaveText('8.00');
  } catch (error) {
    await test.fail();
  }
  
});

test('item vat tomatoes', async ({ page }) => {
await page.locator('#addRow').click();
  await page.locator('#formset_table > tbody > tr:nth-child(1) > td.sorting_1 > span > span.selection > span').click();
  // Name
  await page.getByRole('searchbox').nth(1).fill('Tomatoes');
  await page.getByText('Tomatoes').click();
  // Quantity
  await page.locator('#id_items-1-quantity').fill('3');
  await page.locator('#select2-id_items-1-discount_type-container').press('Tab');
  // Price
  try {
  const priceCell = await page.locator('#id_items-1-unit_price');
  await expect(priceCell).toHaveValue('259');
  } catch (error) {
    await test.fail();
  }
  // Discount
  await page.locator('#select2-id_items-1-discount_type-container').click();
  await page.locator('#select2-id_items-1-discount_type-container').press('ArrowDown');
  await page.locator('#select2-id_items-1-discount_type-container').press('ArrowDown');
  await page.locator('#select2-id_items-1-discount_type-container').press('Enter');

  // Amount
  try {
  const amountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(7)');
  await expect(amountCell).toHaveText('20%');
  } catch (error) {
    await test.fail();
  }

  // (-)Discount (Discount Total)
  try {
  const discountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(8)');
  await expect(discountCell).toHaveText('51.80');
  } catch (error) {
    await test.fail();
  }

  // Item VAT Type (VAT Type)
  try {
  const typeCell = await page.locator('#id-1-vat_type');
  await expect(typeCell).toHaveValue('VATEX');
  } catch (error) {
    await test.fail();
  }
 
  // Subtotal
  try {
  const subtotalCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(9)');
  await expect(subtotalCell).toHaveText('777.00');
  } catch (error) {
    await test.fail();
  }
  
  // (Total) Amount Payable
  try {
  const totalCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(10)');
  await expect(totalCell).toHaveText('725.20');
  } catch (error) {
    await test.fail();
  }
  
});

/* test('calculate total discount', async ({ page }) => {
  let totalDiscount = 0;

  // Get the discountCell values from the first test
  try {
    const uniqloDiscountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(8)');
    const uniqloDiscount = parseFloat(await uniqloDiscountCell.innerText());
    totalDiscount += uniqloDiscount;
  } catch (error) {
    await test.fail();
  }

  // Get the discountCell values from the second test
  try {
    const hmDiscountCell = await page.locator('#formset_table > tbody > tr:nth-child(1) > td:nth-child(8)');
    const hmDiscount = parseFloat(await hmDiscountCell.innerText());
    totalDiscount += hmDiscount;
  } catch (error) {
    await test.fail();
  }

  // Assert the total discount value
  await expect(totalDiscount).toBeCloseTo(178.67);
}); */